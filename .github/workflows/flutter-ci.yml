name: Flutter CI (Pull Request Validation)

on:
  push:                     # ✅ Runs on any push
    branches:
      - main
      - develop
  pull_request:             # ✅ Runs on any PR
    branches:
      - main
      - develop

jobs:
  flutter-ci:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: 🛠 Checkout Code
        uses: actions/checkout@v4
      - name: 🕵️ Check Current User & Privileges
        run: |
          echo "Current User: $(whoami)"
          echo "User ID & Groups: $(id)"
          echo "Default Shell: $SHELL"
          sudo -l  # Check sudo privileges
      - name: 🎯 Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.19.0"
          cache: true
      - name: Upgrade Flutter & Dart
        run: |
          flutter upgrade
          dart --version
          flutter --version
          flutter doctor
      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: 🔍 Run Code Quality Checks
        run: |
          flutter analyze
          dart format --set-exit-if-changed .
      - name: ✅ Run Tests (Unit & Widget)
        run: flutter test

      - name: 📌 Check for Outdated Dependencies
        run: flutter pub outdated

      - name: 🚀 Comment Test Results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            let output = '';
            try {
              output += execSync("flutter analyze", { encoding: "utf-8" }) + "\n";
              output += execSync("flutter test", { encoding: "utf-8" }) + "\n";
              output += execSync("flutter pub outdated", { encoding: "utf-8" }) + "\n";
            } catch (error) {
              output += "⚠️ Some tests or checks failed:\n" + error.message;
            }
            const commentBody = `### ✅ Flutter CI Results\n\`\`\`\n${output}\n\`\`\``;
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });
