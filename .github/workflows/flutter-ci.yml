name: Flutter CI (Pull Request Validation)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  flutter-ci:
    runs-on: self-hosted
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: 🛠 Checkout Code
        uses: actions/checkout@v4
      - name: 🎯 Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.30.0-1.0.pre.196"  # Match your version
          channel: "master"  # Use 'master' channel for pre-release
          architecture: "aarch64"  # ARM64 architecture (since you're on it)
          cache: true
      - name: Clear Flutter cache
        run: |
          flutter clean
          rm -rf ~/.pub-cache    
      - name: Check Flutter Installation
        run: |
          echo "Checking Flutter version..."
          flutter --version
          flutter doctor
      - name: Upgrade Flutter & Dart
        run: |
          flutter upgrade
          dart --version
          flutter --version
          flutter doctor
      - name: 📦 Install Dependencies
        run: flutter pub get
      - name: 🔍 Run Code Quality Checks
        run: |
          flutter analyze
          dart format --set-exit-if-changed .
      - name: ✅ Run Tests (Unit & Widget)
        run: flutter test
      - name: 📌 Check for Outdated Dependencies
        run: flutter pub outdated
      - name: 🚀 Build and Comment on PR
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            let output = '';
            try {
              output += execSync("flutter build appbundle --release", { encoding: "utf-8" }) + "\n";
              output += execSync("flutter build ios --release --no-codesign", { encoding: "utf-8" }) + "\n";
            } catch (error) {
              output += "⚠️ Some builds failed:\n" + error.message;
            }
            if (context.payload.pull_request) {
              const commentBody = `### 🚀 Flutter Build Results\n\`\`\`\n${output}\n\`\`\``;
              github.rest.issues.createComment({
                issue_number: context.payload.pull_request.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: commentBody
              });
            } else {
              console.log("⚠️ Not running in a pull request context. Skipping comment.");
            }
